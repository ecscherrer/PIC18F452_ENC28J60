/**************************************************************
 * HTTPPrint.h
 * Provides callback headers and resolution for user's custom
 * HTTP Application.
 * 
 * This file is automatically generated by the MPFS Utility
 * ALL MODIFICATIONS WILL BE OVERWRITTEN BY THE MPFS GENERATOR
 **************************************************************/

#ifndef __HTTPPRINT_H
#define __HTTPPRINT_H

#include "TCPIP Stack/TCPIP.h"

#if defined(STACK_USE_HTTP2_SERVER)

extern HTTP_CONN curHTTP;
extern HTTP_STUB httpStubs[MAX_HTTP_CONNECTIONS];
extern BYTE curHTTPID;

void HTTPPrint(DWORD callbackID);
void HTTPPrint_hostname(void);
void HTTPPrint_machineDesc(void);
void HTTPPrint_name(WORD);
void HTTPPrint_stock(WORD);
void HTTPPrint_status(WORD);
void HTTPPrint_version(void);
void HTTPPrint_builddate(void);
void HTTPPrint_lights_chk(WORD);

void HTTPPrint(DWORD callbackID)
{
	switch(callbackID)
	{
        case 0x00000000:
			HTTPIncFile((ROM BYTE*)"header.inc");
			break;
        case 0x00000001:
			HTTPPrint_hostname();
			break;
        case 0x00000002:
			HTTPPrint_machineDesc();
			break;
        case 0x00000003:
			HTTPPrint_name(0);
			break;
        case 0x00000004:
			HTTPPrint_stock(0);
			break;
        case 0x00000005:
			HTTPPrint_status(0);
			break;
        case 0x00000006:
			HTTPPrint_name(1);
			break;
        case 0x00000007:
			HTTPPrint_stock(1);
			break;
        case 0x00000008:
			HTTPPrint_status(1);
			break;
        case 0x00000009:
			HTTPPrint_name(2);
			break;
        case 0x0000000a:
			HTTPPrint_stock(2);
			break;
        case 0x0000000b:
			HTTPPrint_status(2);
			break;
        case 0x0000000c:
			HTTPPrint_name(3);
			break;
        case 0x0000000d:
			HTTPPrint_stock(3);
			break;
        case 0x0000000e:
			HTTPPrint_status(3);
			break;
        case 0x0000000f:
			HTTPPrint_name(4);
			break;
        case 0x00000010:
			HTTPPrint_stock(4);
			break;
        case 0x00000011:
			HTTPPrint_status(4);
			break;
        case 0x00000012:
			HTTPPrint_name(5);
			break;
        case 0x00000013:
			HTTPPrint_stock(5);
			break;
        case 0x00000014:
			HTTPPrint_status(5);
			break;
        case 0x00000015:
			HTTPPrint_name(6);
			break;
        case 0x00000016:
			HTTPPrint_stock(6);
			break;
        case 0x00000017:
			HTTPPrint_status(6);
			break;
        case 0x00000018:
			HTTPPrint_version();
			break;
        case 0x00000019:
			HTTPPrint_builddate();
			break;
        case 0x0000001a:
			HTTPIncFile((ROM BYTE*)"footer.inc");
			break;
        case 0x0000001b:
			HTTPPrint_lights_chk(1);
			break;
        case 0x0000001c:
			HTTPPrint_lights_chk(0);
			break;
		default:
			// Output notification for undefined values
			TCPPutROMArray(sktHTTP, (ROM BYTE*)"!DEF", 4);
	}

	return;
}

void HTTPPrint_(void)
{
	TCPPut(sktHTTP, '~');
	return;
}

#endif

#endif
